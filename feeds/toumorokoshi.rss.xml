<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>y.tsutsumi.io - Toumorokoshi</title><link>./</link><description></description><lastBuildDate>Wed, 06 Feb 2013 06:16:00 +0100</lastBuildDate><item><title>Some resources for XACT</title><link>some-resources-for-xact.html</link><description>&lt;p&gt;XACT is a audio application used to manage audio for games using the XNA
framework. Here are some resources to help you get started.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.microsoft.com/en-us/download/details.aspx?id=23714"&gt;Installing XNA 4.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;you may need Visual Studio 2010 express to use it:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.microsoft.com/visualstudio/eng/downloads#d-2010-express"&gt;Visual Studio 2010 install links&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Make sure to install the C# express …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Wed, 06 Feb 2013 06:16:00 +0100</pubDate><guid isPermaLink="false">tag:None,2013-02-06:some-resources-for-xact.html</guid><category>programming</category><category>Visual Studio</category><category>XACT</category><category>XNA</category></item><item><title>Installing Paint.net 3.5 and testing sprite animations</title><link>installing-paintnet-35-and-testing-sprite-animations.html</link><description>&lt;p&gt;After doing some searching online, it looks like paint.net is a common
tool people use to create and animate sprites. Here's a small tutorial
on how to get some basic sprite sheet testing running.&lt;/p&gt;
&lt;div class="section" id="installing-paint-net"&gt;
&lt;h2&gt;Installing paint.net&lt;/h2&gt;
&lt;p&gt;To install it, simply go to&amp;nbsp;&lt;a class="reference external" href="http://www.getpaint.net/"&gt;http://www.getpaint.net/&lt;/a&gt;&amp;nbsp;(be careful …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Fri, 25 Jan 2013 08:16:00 +0100</pubDate><guid isPermaLink="false">tag:None,2013-01-25:installing-paintnet-35-and-testing-sprite-animations.html</guid><category>general</category><category>animations</category><category>paint.net</category><category>sprites</category></item><item><title>Removing Headers from YUI IO request</title><link>removing-headers-from-yui-io-request.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://yuilibrary.com/projects/yui3/ticket/2529324"&gt;http://yuilibrary.com/projects/yui3/ticket/2529324&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You just add a &amp;quot;headers&amp;quot;: { &amp;quot;YOUR_PARAM&amp;quot;: &amp;quot;disabled&amp;quot;} in the request.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Mon, 26 Nov 2012 22:28:00 +0100</pubDate><guid isPermaLink="false">tag:None,2012-11-26:removing-headers-from-yui-io-request.html</guid><category>programming</category><category>YUI</category></item><item><title>Adding JSONP to turbogears</title><link>adding-jsonp-to-turbogears.html</link><description>&lt;p&gt;&lt;pre class="literal-block"&gt;
from tg import json_encode, responsefrom tg.render import _get_tg_varsdef render_jsonp(template_name, template_vars, **kwargs):callback = template_name or kwargs.pop('callback', None) or 'callback'for key in _get_tg_vars():del template_vars[key]response.headers['Content-Type'] = 'text/javascript'return '%s(%s)' % (template_name, json_encode(template_vars))from myapp.config.app_cfg import base_configbase_config.render_functions['jsonp'] = render_jsonpbase_config.mimetype_lookup = {'.jsonp': 'text …&lt;/pre&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Fri, 09 Nov 2012 08:34:00 +0100</pubDate><guid isPermaLink="false">tag:None,2012-11-09:adding-jsonp-to-turbogears.html</guid><category>programming</category></item><item><title>Move over bash: Python is my language for setup scripts now.</title><link>move-over-bash-python-is-my-language-for-setup-scripts-now.html</link><description>&lt;p&gt;I know when people discuss using programming languages, there's two main
schools of thought:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use the same language for as much of your stack as possible&lt;/li&gt;
&lt;li&gt;Use the language that's most appropriate for each part of the stack
as much of possible.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;p&gt;Clearly, there's very strong advantages to both. Using …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Sat, 08 Sep 2012 21:34:00 +0200</pubDate><guid isPermaLink="false">tag:None,2012-09-08:move-over-bash-python-is-my-language-for-setup-scripts-now.html</guid><category>programming</category><category>Bash</category><category>python</category></item><item><title>My Emacs Environment</title><link>my-emacs-environment.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.youtube.com/watch?v=z0PET0Qq8CU&amp;amp;feature=plcp"&gt;http://www.youtube.com/watch?v=z0PET0Qq8CU&amp;amp;feature=plcp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here's a video of my Emacs environment, and some ways I use it with
Python.&lt;/p&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Thu, 16 Aug 2012 09:28:00 +0200</pubDate><guid isPermaLink="false">tag:None,2012-08-16:my-emacs-environment.html</guid><category>programming</category></item><item><title>fine, PyDev is better than Emacs for Python. I'm still using Emacs though.</title><link>fine-pydev-is-better-than-emacs-for-python-im-still-using-emacs-though.html</link><description>&lt;p&gt;Being part of a company that uses Python, I have a friend who loves
PyDev, an eclipse plugin that basically adapts the functionality of the
eclipse IDE to Python. Even though I'm still an Emacs greenhorn, I swear
my devotion to the text editor wouldn't waver.&lt;/p&gt;
&lt;p&gt;Until I saw what …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Mon, 13 Aug 2012 09:09:00 +0200</pubDate><guid isPermaLink="false">tag:None,2012-08-13:fine-pydev-is-better-than-emacs-for-python-im-still-using-emacs-though.html</guid><category>programming</category><category>Eclipse</category><category>Emacs</category><category>PyDev</category></item><item><title>Slimy: another html5 slideshow</title><link>slimy-another-html5-slideshow.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://code.google.com/p/slimy/"&gt;&lt;img alt="image0" src="https://toumorokoshi.files.wordpress.com/2012/05/slimy.png" /&gt;&lt;/a&gt;After seeing a coworker's presentation completely done using
html5 and javascript, I really realized how much of a platform that
html5 can be. Effectively, it's a ubiquitous platform by which any
operating system can run code, with very little prior setup necessary. I
really liked the concept of an html5 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Tue, 08 May 2012 20:45:00 +0200</pubDate><guid isPermaLink="false">tag:None,2012-05-08:slimy-another-html5-slideshow.html</guid><category>programming</category><category>slimy html5</category></item><item><title>Passing perforce batch files</title><link>passing-perforce-batch-files.html</link><description>&lt;p&gt;My coworker showed this to me today: if you want to use a perforce
command from the command line, and pass it a batch of filenames from a
command (such as find or grep), simply use:&lt;/p&gt;
&lt;p&gt;&lt;pre class="literal-block"&gt;
p4 COMMAND ${ENTER_COMMAND_HERE}
&lt;/pre&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Thu, 08 Mar 2012 01:17:00 +0100</pubDate><guid isPermaLink="false">tag:None,2012-03-08:passing-perforce-batch-files.html</guid><category>programming</category></item><item><title>Automatic Package installation using ELPA in Emacs 24</title><link>automatic-package-installation-using-elpa-in-emacs-24.html</link><description>&lt;p&gt;Emacs 24 includes many improvements over 23, but there is one particular
addition that makes me run around and go crazy with joy: a built-in
package management system, &lt;a class="reference external" href="http://tromey.com/elpa/"&gt;ELPA&lt;/a&gt; (Emacs 24 is still in development,
&lt;a class="reference external" href="http://batsov.com/articles/2011/10/09/getting-started-with-emacs-24/"&gt;Bozhidar Batsov&lt;/a&gt;&amp;nbsp;has a good guide on how to get it set up). I switched …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Thu, 16 Feb 2012 23:59:00 +0100</pubDate><guid isPermaLink="false">tag:None,2012-02-16:automatic-package-installation-using-elpa-in-emacs-24.html</guid><category>programming</category></item><item><title>Python Pet Peeves</title><link>python-pet-peeves.html</link><description>&lt;p&gt;As of this posting, Python has been my main programming language for
over three years. Although I definitely feel that Python is not a good
fit for all programming projects, the speed and efficiency with which I
can code in it has made it my go-to language whenever possible.&lt;/p&gt;
&lt;p&gt;As …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Thu, 26 Jan 2012 19:14:00 +0100</pubDate><guid isPermaLink="false">tag:None,2012-01-26:python-pet-peeves.html</guid><category>programming</category></item><item><title>Search and replace multi-line expressions with SED</title><link>search-and-replace-multi-line-expressions-with-sed.html</link><description>&lt;p&gt;Now here's an interesting problem:&lt;/p&gt;
&lt;p&gt;I wanted to do a recursive search and replace in unix, AND I wanted to
do an expression that spans multiple lines. Here's what I came up with:&lt;/p&gt;
&lt;p&gt;&lt;pre class="literal-block"&gt;
find ./ -type f | xargs sed -E -i -n'1h;1!H;${;g;s/&amp;lt;\/fileSet&amp;gt;.*&amp;lt;fileSet&amp;gt;.*RevisionVersion.*&amp;lt;\/fileSet&amp;gt;.*&amp;lt;\/fileSets …&lt;/pre&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Wed, 26 Oct 2011 23:55:00 +0200</pubDate><guid isPermaLink="false">tag:None,2011-10-26:search-and-replace-multi-line-expressions-with-sed.html</guid><category>programming</category><category>sed</category><category>unix</category></item><item><title>WebPageTest and IE9</title><link>webpagetest-and-ie9.html</link><description>&lt;p&gt;Recently, I tried updating the browser for a WebPageTest instance to
IE9. This proved to have some issues, specifically due to the pop-up
dialogues that IE9 has now to tell you when something suspicious occurs.&lt;/p&gt;
&lt;p&gt;Logging into WPT, I was greeted with an error on an IE9 browser opened
by …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Tue, 25 Oct 2011 00:25:00 +0200</pubDate><guid isPermaLink="false">tag:None,2011-10-25:webpagetest-and-ie9.html</guid><category>programming</category></item><item><title>Getting Python2.5 to Build with sqlite3 and zlib on Ubuntu Natty 2.5</title><link>getting-python25-to-build-with-sqlite3-and-zlib-on-ubuntu-natty-25.html</link><description>&lt;p&gt;I had a really hard time finding this, so I'm posting it here:&lt;/p&gt;
&lt;p&gt;First one must install all the proper packages on Natty (these are the
packages needed for zlib and sqlite in general, not just specifically
for Python):&lt;/p&gt;
&lt;p&gt;&lt;pre class="literal-block"&gt;
sudo apt-get install zlibc zlib1g zlib1g-devsudo apt-get install sqlite3-dev
&lt;/pre&gt;
&lt;/p&gt;&lt;p&gt;Then one …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Mon, 19 Sep 2011 19:21:00 +0200</pubDate><guid isPermaLink="false">tag:None,2011-09-19:getting-python25-to-build-with-sqlite3-and-zlib-on-ubuntu-natty-25.html</guid><category>programming</category><category>Python2.5</category><category>sqlite3</category><category>Ubuntu</category><category>zlib</category></item><item><title>My IDE in Emacs (mainly for Python)</title><link>my-ide-in-emacs-mainly-for-python.html</link><description>&lt;p&gt;I'm writing this article up to mainly keep track of the current state of
my IDE in Emacs, how to set one up, and to keep my to-do list.&lt;/p&gt;
&lt;div class="section" id="implemented-features"&gt;
&lt;h2&gt;Implemented Features&lt;/h2&gt;
&lt;/p&gt;&lt;div class="section" id="default-emacs-library-includes"&gt;
&lt;h3&gt;Default Emacs Library Includes&lt;/h3&gt;
&lt;/p&gt;&lt;p&gt;I use the following from the library that comes with Emacs (as of
version 23 …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Tue, 23 Aug 2011 00:26:00 +0200</pubDate><guid isPermaLink="false">tag:None,2011-08-23:my-ide-in-emacs-mainly-for-python.html</guid><category>programming</category><category>Emacs</category><category>IDE</category><category>python</category></item><item><title>ax_check_mysql introduction and example</title><link>ax_check_mysql-introduction-and-example.html</link><description>&lt;p&gt;I previously mentioned&amp;nbsp;&lt;a class="reference external" href="http://www.gnu.org/software/autoconf-archive/ax_check_mysql.html"&gt;ax_check_mysql.m4&lt;/a&gt;&amp;nbsp;in one of my posts, an
m4 macro written for autoconf. So here's a bit more information about
it, and some examples on how to use it.&lt;/p&gt;
&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;/p&gt;&lt;p&gt;So ax_check_mysql is essentially an m4 macro for autoconf that was
written with MySQL plugin developers in …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Sat, 20 Aug 2011 18:30:00 +0200</pubDate><guid isPermaLink="false">tag:None,2011-08-20:ax_check_mysql-introduction-and-example.html</guid><category>programming</category><category>autoconf</category><category>ax_check_mysql</category></item><item><title>Code folding in Emacs Viper-Mode</title><link>code-folding-in-emacs-viper-mode.html</link><description>&lt;p&gt;Code folding is a feature I've never really used, and for the most part
seem to have done find without. I generally use search to navigate from
place to place in my code, but I realize this isn't always the most
efficient way to go, and code folding is very …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Wed, 17 Aug 2011 23:06:00 +0200</pubDate><guid isPermaLink="false">tag:None,2011-08-17:code-folding-in-emacs-viper-mode.html</guid><category>programming</category><category>Emacs</category><category>folding</category><category>viper-mode</category></item><item><title>Autoconf: ax_check_mysql</title><link>autoconf-ax_check_mysql.html</link><description>&lt;p&gt;Just mentioning a little m4 script I wrote a little while ago.
ax_check_mysql is used to find a valid MySQL installation, and gives
you the binary, include, and plugin directories.&lt;/p&gt;
&lt;p&gt;If you have an autoconf project, and you need MySQL, definitely consider
it!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.gnu.org/software/autoconf-archive/ax_check_mysql.html#ax_check_mysql"&gt;http://www.gnu.org/software/autoconf-archive/ax_check_mysql …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Mon, 27 Jun 2011 16:19:00 +0200</pubDate><guid isPermaLink="false">tag:None,2011-06-27:autoconf-ax_check_mysql.html</guid><category>programming</category><category>autoconf</category><category>ax_check_mysql</category><category>mysql</category></item><item><title>Configuring HttpArchive + Webpagetest (Part 3: HttpArchive)</title><link>configuring-httparchive-webpagetest-part-3-httparchive.html</link><description>&lt;p&gt;It's time to install HttpArchive! So just as with Webpagetest, there's
some requirements for HttpArchive as well.&lt;/p&gt;
&lt;p&gt;HttpArchive must run on a unix-based machine, as HttpArchive uses pcntl,
a threading function in PHP currently available only on unix-based
machines. For this guide I will be using Ubuntu.&lt;/p&gt;
&lt;p&gt;The following will …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Fri, 24 Jun 2011 19:43:00 +0200</pubDate><guid isPermaLink="false">tag:None,2011-06-24:configuring-httparchive-webpagetest-part-3-httparchive.html</guid><category>programming</category><category>HttpArchive</category><category>Webpagetest</category></item><item><title>Configuring HttpArchive + Webpagetest (Part 2: Webpagetest)</title><link>configuring-httparchive-webpagetest-part-2-webpagetest.html</link><description>&lt;p&gt;Welcome to part 2! This post discusses installing Webpagetest.org. In
order to do so, we will need:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A windows machine (XP or Windows 7 have been tested with this method)&lt;/li&gt;
&lt;li&gt;Apache2.2 or higher&lt;/li&gt;
&lt;li&gt;PHP5 or higher&lt;/li&gt;
&lt;li&gt;IE of some sort (IE8 or 9 would be best)&lt;/li&gt;
&lt;li&gt;ffmpeg&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;p&gt;It …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Fri, 24 Jun 2011 19:03:00 +0200</pubDate><guid isPermaLink="false">tag:None,2011-06-24:configuring-httparchive-webpagetest-part-2-webpagetest.html</guid><category>programming</category><category>HttpArchive</category><category>Webpagetest</category></item><item><title>Configuring HttpArchive + Webpagetest (Part 1: Introduction)</title><link>configuring-httparchive-webpagetest-part-1-introduction.html</link><description>&lt;p&gt;Testing is an integral part of developing code, and this is usually a
lesson that is learned the hard way. I can't name all the times that
I've made a trivial mistake that goes unnoticed until the code has
ballooned to the point where rooting around and figuring it out …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toumorokoshi</dc:creator><pubDate>Thu, 23 Jun 2011 22:40:00 +0200</pubDate><guid isPermaLink="false">tag:None,2011-06-23:configuring-httparchive-webpagetest-part-1-introduction.html</guid><category>programming</category><category>HttpArchive</category><category>Webpagetest</category></item></channel></rss>